@using BlazorHeightmaps.Presets

<div class="flex">

  <Input LabelText="Preset" class="flex-none mx-2">
    <Select OnChanged="@OnPresetChanged">
      @foreach (var preset in Preset.All())
      {
        <option value="@preset.Name" selected="@(preset == _selectedPreset)">@preset.Name</option>
      }
    </Select>

  </Input>
  
  <Input LabelText="Map" class="flex-none mx-2">
    <Select OnChanged="@OnTileSetChanged">
      @foreach (var set in SlippyTileSet.All().Where(s => s.TileSize == 256))
      {
        <option value="@set.Name" selected="@(set == _selectedSet)">@set.Name</option>
      }
    </Select>

  </Input>

  <Input LabelText="Rotation" class="flex-none mx-2">
    <Button OnClick="@Left">Left</Button>
    <Button OnClick="@Right">Right</Button>
  </Input>


</div>

@code {

  [CascadingParameter()]
  public State State { get; set; }

  private Preset _selectedPreset = Preset.CitiesSkylines;
  private SlippyTileSet _selectedSet = SlippyTileSet.OpenStreetMap;

  private void OnTileSetChanged(ChangeEventArgs e)
  {
    var set = SlippyTileSet.ByName((string)e.Value);
    if (set == null)
    {
      return;
    }
    _selectedSet = set;

    State.Set = set.Name;
    State.OnStateChanged();
  }

  private void OnPresetChanged(ChangeEventArgs e)
  {
    var preset = Preset.ByName((string)e.Value);
    if (preset == null)
    {
      return;
    }
    _selectedPreset = preset;

    State?.Apply(preset);
  }


  private void Left()
  {
    State.Angle += 10;
    State.OnStateChanged();
  }

  private void Right()
  {
    State.Angle -= 10;
    State.OnStateChanged();
  }

}
